# –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–æ–¥—É–ª—å ImportExcel:
# Install-Module -Name ImportExcel -Scope CurrentUser -Force

$ExcelPath = "C:\vpo\users_2025_sorted.xlsx"
$OutputPath = "C:\vpo"
$FileNameBase = "SVPO"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
$FixedDepartment = "–°–í–ü–û –ó–û 2025"
$PassType = "–°—Ç—É–¥–µ–Ω—Ç –±–µ–∑ –æ–±—â–µ–∂–∏—Ç–∏—è"
$GenderDefault = "–ú—É–∂—á–∏–Ω–∞"

# –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –≤—ã–≤–æ–¥–∞, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if (-not (Test-Path -Path $OutputPath)) {
    New-Item -ItemType Directory -Path $OutputPath | Out-Null
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Excel-—Ñ–∞–π–ª–∞
if (-not (Test-Path $ExcelPath)) {
    throw "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $ExcelPath"
}

# –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel
Write-Host "–ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑: $ExcelPath"
$Users = Import-Excel -Path $ExcelPath -WorksheetName "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"

if (-not $Users) {
    throw "–í Excel-—Ñ–∞–π–ª–µ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ª–∏—Å—Ç–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
$requiredColumns = '–§–∞–º–∏–ª–∏—è', '–ò–º—è', '–û—Ç—á–µ—Å—Ç–≤–æ', '–õ–æ–≥–∏–Ω', 'rawcard'
$missing = $requiredColumns | Where-Object { $_ -notin $Users[0].PSObject.Properties.Name }
if ($missing) {
    throw "–í Excel –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–æ–ª–±—Ü—ã: $($missing -join ', ')"
}

# ==================================================
# 1. –§–∞–π–ª —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ (SVPO.csv) ‚Äî –±–µ–∑ –∫–∞–≤—ã—á–µ–∫, –≤ ANSI
# ==================================================
$HeaderEmployee = @(
    'Name', 'MidName', 'LastName', 'TabNumber', 'Department',
    'WorkPhone', 'HomePhone', 'BirthDate', 'Address', 'Post',
    'Company', "'", 'Status', 'Weight', 'WeightDelta',
    'TypeDocum', 'DocSeries', 'DocNumber', 'INN', 'DocDate',
    'SubDivisionCode', 'WhoIssued', 'DocDateFinish', 'BirthPlace', 'Gender',
    'ReceiveName', 'ReceiveLastName', 'ReceiveMidName', 'CompanyReceive', 'SectionReceive',
    'ReceiveGuestRoom', 'Auto', 'AutoNumber', 'Automarka', 'AutoColor',
    'DateVisit', 'DateVisitFinish', 'VisitGoal', 'VIN', 'BlackList',
    'BlackListReason', 'Fired', 'FireReason', 'IndexForContactId', 'EmailList'
) -join ';'

$EmployeeLines = @($HeaderEmployee)

foreach ($user in $Users) {
    $line = @(
        $user.–ò–º—è
        $user.–û—Ç—á–µ—Å—Ç–≤–æ
        $user.–§–∞–º–∏–ª–∏—è
        $user.–õ–æ–≥–∏–Ω
        $FixedDepartment
        '' # WorkPhone
        '' # HomePhone
        '' # BirthDate
        '' # Address
        '' # Post
        '' # Company
        '' # –ü–æ–ª–µ "'"
        '5' # Status
        '' # Weight
        '' # WeightDelta
        '' # TypeDocum
        '' # DocSeries
        '' # DocNumber
        '' # INN
        '' # DocDate
        '' # SubDivisionCode
        '' # WhoIssued
        '' # DocDateFinish
        '' # BirthPlace
        $GenderDefault
        '' # ReceiveName
        '' # ReceiveLastName
        '' # ReceiveMidName
        '' # CompanyReceive
        '' # SectionReceive
        '' # ReceiveGuestRoom
        '' # Auto
        '' # AutoNumber
        '' # Automarka
        '' # AutoColor
        '' # DateVisit
        '' # DateVisitFinish
        '' # VisitGoal
        '' # VIN
        '0' # BlackList
        '' # BlackListReason
        '0' # Fired
        '' # FireReason
        '' # IndexForContactId
        '' # EmailList
    ) -join ';'

    $EmployeeLines += $line
}

$EmployeePath = Join-Path $OutputPath "$FileNameBase.csv"
$EmployeeLines | Set-Content -Path $EmployeePath -Encoding Default
Write-Host "‚úÖ –§–∞–π–ª —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω (ANSI): $EmployeePath"

# ==================================================
# 2. –§–∞–π–ª –ø—Ä–æ–ø—É—Å–∫–æ–≤ (SVPO-pass.csv) ‚Äî –±–µ–∑ –∫–∞–≤—ã—á–µ–∫, –≤ ANSI
# ==================================================
$StartDate = Get-Date -Format 'dd.MM.yyyy'
$EndDate = (Get-Date).AddDays(1865).ToString('dd.MM.yyyy')

$PassLines = @()
foreach ($user in $Users) {
    $line = @(
        '0'
        '0'
        $user.–õ–æ–≥–∏–Ω
        $PassType
        $StartDate
        $EndDate
        $user.rawcard
        '0'
        '0'
        ''
        ''
    ) -join ';'

    $PassLines += $line
}

$PassPath = Join-Path $OutputPath "$FileNameBase-pass.csv"
$PassLines | Set-Content -Path $PassPath -Encoding Default
Write-Host "‚úÖ –§–∞–π–ª –ø—Ä–æ–ø—É—Å–∫–æ–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω (ANSI):   $PassPath"

Write-Host "`nüéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –§–∞–π–ª—ã –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ ANSI (Windows-1251)."
